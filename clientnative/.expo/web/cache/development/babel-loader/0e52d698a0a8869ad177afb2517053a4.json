{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { Ionicons } from '@expo/vector-icons';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { ModalPicker } from \"./ModalPicker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignUp = function SignUp() {\n  var _useState = useState('Seleccionar Perfil...'),\n      _useState2 = _slicedToArray(_useState, 2),\n      chooseData = _useState2[0],\n      setchooseData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isModalVisible = _useState4[0],\n      setisModalVisible = _useState4[1];\n\n  var changeModalVisibility = function changeModalVisibility(bool) {\n    setisModalVisible(bool);\n  };\n\n  var setData = function setData(option) {\n    setchooseData(option);\n  };\n\n  return _jsxs(ScrollView, {\n    style: {\n      flex: 1,\n      backgroundColor: '#ffffffff'\n    },\n    showsVerticalScrollIndicator: false,\n    children: [_jsx(ImageBackground, {\n      source: require(\"./ruta.png\"),\n      style: {\n        height: Dimensions.get('window').height / 2.5\n      },\n      children: _jsxs(View, {\n        style: styles.brandView,\n        children: [_jsx(Ionicons, {\n          name: \"location-sharp\",\n          style: {\n            color: '#ffbe0b',\n            fontSize: 100\n          }\n        }), _jsx(Text, {\n          style: styles.brandViewText,\n          children: \"LOGIEXPRESS\"\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.bottonView,\n      children: [_jsx(View, {\n        style: {\n          padding: 40,\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: _jsx(Text, {\n          style: {\n            color: '#4632a1',\n            fontSize: 24\n          },\n          children: \"Ingresa a LogiExpress\"\n        })\n      }), _jsxs(View, {\n        style: styles.FormView,\n        children: [_jsx(TextInput, {\n          placeholder: \"Nombre*\",\n          style: styles.TextInput\n        }), _jsx(TextInput, {\n          placeholder: \"Apellido*\",\n          style: styles.TextInput\n        }), _jsx(TextInput, {\n          placeholder: \"Direcci\\xF3n de Mail*\",\n          style: styles.TextInput\n        }), _jsx(TextInput, {\n          placeholder: \"Contrase\\xF1a*\",\n          secureTextEntry: true,\n          style: styles.TextInput\n        }), _jsx(TextInput, {\n          placeholder: \"Telefono*\",\n          style: styles.TextInput\n        }), _jsxs(SafeAreaView, {\n          style: styles.container,\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return changeModalVisibility(true);\n            },\n            style: styles.TouchableOpacity,\n            children: _jsx(Text, {\n              style: styles.text,\n              children: chooseData\n            })\n          }), _jsx(Modal, {\n            transparent: true,\n            animationType: \"fade\",\n            visible: isModalVisible,\n            nRequestClose: function nRequestClose() {\n              return changeModalVisibility(false);\n            },\n            children: _jsx(ModalPicker, {\n              changeModalVisibility: changeModalVisibility,\n              setData: setData\n            })\n          })]\n        }), _jsx(TouchableOpacity, {\n          style: styles.Button,\n          children: _jsx(Text, {\n            style: styles.ButtonText,\n            children: \"Registrarme!\"\n          })\n        })]\n      })]\n    })]\n  });\n};\n\nexport default SignUp;\nvar styles = StyleSheet.create({\n  brandView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  brandViewText: {\n    color: '#ffbe0b',\n    fontSize: 45,\n    fontWeight: 'bold',\n    textTransform: 'uppercase'\n  },\n  bottonView: {\n    flex: 1.5,\n    backgroundColor: '#ffffffff',\n    bottom: 50,\n    borderTopStartRadius: 60,\n    borderTopEndRadius: 60\n  },\n  FormView: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: -20\n  },\n  TextInput: {\n    width: '90%',\n    borderWidth: 1,\n    borderColor: 'black',\n    height: 52,\n    borderRadius: 10,\n    paddingLeft: 10,\n    marginTop: 20,\n    color: 'black'\n  },\n  Button: {\n    width: '90%',\n    color: 'yellow',\n    height: 52,\n    backgroundColor: 'black',\n    borderRadius: 10,\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  ButtonText: {\n    fontWeight: 'bold',\n    fontSize: 18,\n    color: 'white'\n  },\n  SingUpText: {\n    color: '#4632a1',\n    fontSize: 20\n  },\n  TextButton: {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  preg: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20\n  },\n  pregunta: {\n    color: 'red'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 50,\n    marginTop: 20,\n    borderRadius: 20\n  },\n  text: {\n    fontSize: 25,\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  TouchableOpacity: {\n    backgroundColor: '#ffbe0b',\n    alignSelf: 'stretch',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/TATAC/OneDrive/Desktop/HENRY/PROYECTO FINAL/LOGIEXPRESS/clientnative/Components/SingUp.js"],"names":["React","useState","Ionicons","ModalPicker","SignUp","chooseData","setchooseData","isModalVisible","setisModalVisible","changeModalVisibility","bool","setData","option","flex","backgroundColor","require","height","Dimensions","get","styles","brandView","color","fontSize","brandViewText","bottonView","padding","display","alignItems","FormView","TextInput","container","TouchableOpacity","text","Button","ButtonText","StyleSheet","create","justifyContent","fontWeight","textTransform","bottom","borderTopStartRadius","borderTopEndRadius","width","flexDirection","marginTop","borderWidth","borderColor","borderRadius","paddingLeft","SingUpText","TextButton","preg","pregunta","alignSelf","paddingHorizontal","paddingVertical"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport {Text, StyleSheet, View, Image, TextInput, TouchableOpacity, ScrollView, ImageBackground, Dimensions, SafeAreaView, Modal} from 'react-native';\r\nimport {ModalPicker} from \"./ModalPicker\"\r\n\r\n\r\n\r\n\r\nconst SignUp = ()=>{\r\n    const [chooseData, setchooseData] = useState('Seleccionar Perfil...');\r\n    const [isModalVisible, setisModalVisible] = useState(false);\r\n\r\n    const changeModalVisibility = (bool) =>{\r\n        setisModalVisible(bool)\r\n    }\r\n\r\n    const setData= (option) =>{\r\n        setchooseData(option)\r\n    }\r\n    return (\r\n        <ScrollView \r\n        style={{flex: 1, backgroundColor: '#ffffffff'}} \r\n        showsVerticalScrollIndicator={false}>\r\n            {/* Brand View */}\r\n            <ImageBackground \r\n            source={require('./ruta.png')}\r\n                style={{\r\n                    height: Dimensions.get('window').height / 2.5,\r\n                    }}>\r\n                        <View style={styles.brandView}>\r\n                            <Ionicons name='location-sharp' style={{color:'#ffbe0b', fontSize:100}}/>\r\n                            <Text style={styles.brandViewText}>LOGIEXPRESS</Text>\r\n                        </View>\r\n                    </ImageBackground>\r\n                    {/* Botton View */}\r\n                    <View style={styles.bottonView}>\r\n                        {/* Welcome View */}\r\n                        <View style={{padding: 40, display:'flex', alignItems:'center'}}>\r\n                            <Text style={{color:'#4632a1', fontSize:24}}>Ingresa a LogiExpress</Text>\r\n                            \r\n                                                                                   \r\n                        </View>\r\n                        {/* inputs */}\r\n                        <View style={styles.FormView}>\r\n                        <TextInput placeholder=\"Nombre*\" style={styles.TextInput}></TextInput>\r\n                        <TextInput placeholder=\"Apellido*\" style={styles.TextInput}></TextInput>  \r\n                        <TextInput placeholder=\"Dirección de Mail*\" style={styles.TextInput}></TextInput>                \r\n                        <TextInput placeholder=\"Contraseña*\" secureTextEntry={true} style={styles.TextInput}></TextInput>\r\n                        <TextInput placeholder=\"Telefono*\" style={styles.TextInput}></TextInput>\r\n                        <SafeAreaView style={styles.container}>\r\n                            <TouchableOpacity\r\n                            onPress={() => changeModalVisibility(true)}\r\n                            style={styles.TouchableOpacity}\r\n                            >\r\n                                <Text style={styles.text}>{chooseData}</Text>\r\n                            </TouchableOpacity>\r\n                            <Modal\r\n                                transparent={true}\r\n                                animationType='fade'\r\n                                visible={isModalVisible}\r\n                                nRequestClose={() => changeModalVisibility(false)}\r\n                                >\r\n                                <ModalPicker\r\n                                changeModalVisibility={changeModalVisibility}\r\n                                setData={setData}\r\n                                />\r\n                            </Modal>\r\n                        </SafeAreaView>\r\n                        \r\n                        <TouchableOpacity style={styles.Button}>\r\n                           <Text style={styles.ButtonText}>Registrarme!</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                      \r\n                        \r\n\r\n                       \r\n                    </View>\r\n                    \r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n\r\nconst styles = StyleSheet.create({\r\n    brandView: {\r\n        flex:1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    brandViewText:{\r\n        color:'#ffbe0b',\r\n        fontSize:45,\r\n        fontWeight:'bold',\r\n        textTransform:'uppercase',\r\n        // justifyContent:'flex-start'\r\n    },\r\n    bottonView:{\r\n        flex:1.5,\r\n        backgroundColor:'#ffffffff',\r\n        bottom:50,\r\n        borderTopStartRadius:60,\r\n        borderTopEndRadius:60,\r\n    },  \r\n    FormView:{\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        marginTop:-20,\r\n    },\r\n    TextInput:{\r\n        width:'90%',\r\n        borderWidth:1,\r\n        borderColor:'black',\r\n        height:52,\r\n        borderRadius:10,\r\n        paddingLeft:10,\r\n        marginTop:20,\r\n        color: 'black'\r\n    },\r\n    Button:{\r\n        width:'90%',\r\n        color:'yellow',\r\n        height:52,\r\n        backgroundColor: 'black',\r\n        borderRadius:10,\r\n        marginTop:20,\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n    },\r\n    ButtonText:{\r\n        fontWeight:'bold',\r\n        fontSize:18,\r\n        color:'white'\r\n    },\r\n    SingUpText:{\r\n        color:'#4632a1',\r\n        fontSize:20,\r\n    },\r\n    TextButton:{\r\n        width:'100%',\r\n        display:'flex',\r\n        alignItems:'center',\r\n        marginTop:10,\r\n    },\r\n    preg:{\r\n        \r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        marginTop:20\r\n    },\r\n    pregunta:{\r\n        color:'red',\r\n    },\r\n    container:{\r\n        flex:1,\r\n        backgroundColor: 'white',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 50,\r\n        marginTop:20,\r\n        borderRadius:20,\r\n    },\r\n    text:{\r\n        // marginVertical: 20,\r\n        fontSize: 25,\r\n        color:'white',\r\n        fontWeight:'bold'\r\n    },\r\n    TouchableOpacity:{\r\n        backgroundColor:'#ffbe0b',\r\n        alignSelf: 'stretch',\r\n        paddingHorizontal: 20,\r\n        paddingVertical:10,\r\n        borderRadius:10,\r\n    }\r\n})\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}